{"componentChunkName":"component---src-templates-blog-post-js","path":"/Error/젠킨스 에러로그 개선기/","result":{"data":{"site":{"siteMetadata":{"title":"Jeong.io","author":"JeongYeonJae","siteUrl":"https://jeongyeon9254.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"0811e6e8-9f10-5453-af25-87c0901c67cd","excerpt":"따듯한 netlify에서 젠킨스로 이동하며.. 이전 FE CI/CD는 netlify를 이용하고 있었습니다. netlify는 CI/CD뿐만 아니라 배포부터 CDN,DNS까지 모두 제공해주는 좋은 플랫폼입니다. 하지만 이번에 인프라를 전체적으로 AWS로 통합할 계획이 있었고(전체적인 스택 통일과 개발비관리, 그리고 액세스로그를 보고싶었습니다) CI/CD 는 젠킨스, 전체적인 배포 인프라는 s3를 통한 정적 웹호스팅을 기반으로 clodfront와 route5…","html":"<h2 id=\"따듯한-netlify에서-젠킨스로-이동하며\" style=\"position:relative;\"><a href=\"#%EB%94%B0%EB%93%AF%ED%95%9C-netlify%EC%97%90%EC%84%9C-%EC%A0%A0%ED%82%A8%EC%8A%A4%EB%A1%9C-%EC%9D%B4%EB%8F%99%ED%95%98%EB%A9%B0\" aria-label=\"따듯한 netlify에서 젠킨스로 이동하며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>따듯한 netlify에서 젠킨스로 이동하며..</h2>\n<p>이전 FE CI/CD는 netlify를 이용하고 있었습니다. netlify는 CI/CD뿐만 아니라 배포부터 CDN,DNS까지 모두 제공해주는 좋은 플랫폼입니다.</p>\n<p>하지만 이번에 인프라를 전체적으로 AWS로 통합할 계획이 있었고(전체적인 스택 통일과 개발비관리, 그리고 액세스로그를 보고싶었습니다) CI/CD 는 젠킨스, 전체적인 배포 인프라는 s3를 통한 정적 웹호스팅을 기반으로 clodfront와 route53을 이용하기로 했습니다.</p>\n<p>사실 배포 이후 과정은 크게 어렵지 않아 문제가 없었습니다.</p>\n<p>다만 젠킨스는 이번에 첫 이용이며 이미 BE서버에 올라간 젠킨스를 통해 배포를 하려다 보니 이해도가 낮아 자잘한 이슈들이 많았습니다. 그 자잘한 이슈들을 정리해보려 합니다.</p>\n<h2 id=\"1-env파일을-어떻게-관리할것인가\" style=\"position:relative;\"><a href=\"#1-env%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B4%80%EB%A6%AC%ED%95%A0%EA%B2%83%EC%9D%B8%EA%B0%80\" aria-label=\"1 env파일을 어떻게 관리할것인가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. env파일을 어떻게 관리할것인가?</h2>\n<p>레포에 올라가면 안되는 key값의 관리들은 netlify에서는 environment variables를 통해 관리했습니다. 하지만 젠킨스를 통해 배포가 될 경우 결국 정적인 파일을 s3에 올리는것뿐이기에 env파일이 필요했습니다.</p>\n<p>그렇다고 env파일을 레포에 올릴수는 없기에 젠킨스 파이프 라인에서 매개변수를 등록하고 해당 매개변수를 받아 스크립트에서 env 파일을 만드는 방식으로 진행했습니다.</p>\n<ol>\n<li>\n<p>젠킨스 스트링 파라미터로 매개변수를 등록합니다.</p>\n<p><img src=\"/content/error/jenkins_1.png\" alt=\"ex_screenshot\"></p>\n</li>\n<li>\n<p>매개변수를 받아 파이프라인에서 env 파일을 만듭니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// package install &amp;&amp; create .env\nstage('yarn install') {\n    steps {\n        echo 'yarn install start'\n        sh '''\n        yarn install\n        echo 'REACT_APP_EARLY_URI=\"${REACT_APP_EARLY_URI}\"' > .env\n        '''\n        echo 'yarn install done'\n    }</code></pre></div>\n</li>\n</ol>\n<h2 id=\"2-빌드가-멈추지-않고-젠킨스가-뻗어버렸다\" style=\"position:relative;\"><a href=\"#2-%EB%B9%8C%EB%93%9C%EA%B0%80-%EB%A9%88%EC%B6%94%EC%A7%80-%EC%95%8A%EA%B3%A0-%EC%A0%A0%ED%82%A8%EC%8A%A4%EA%B0%80-%EB%BB%97%EC%96%B4%EB%B2%84%EB%A0%B8%EB%8B%A4\" aria-label=\"2 빌드가 멈추지 않고 젠킨스가 뻗어버렸다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 빌드가 멈추지 않고 젠킨스가 뻗어버렸다</h2>\n<p>파이프라인 작성 후 실질적으로 젠킨스를 이용해 build를 진행해 보는데, 자꾸만 install 이후 build job에서 무한 루프에 빠지기 시작합니다. 이 job때문에 아예 젠킨스로 접속도 되지않는 사태가 발생합니다.</p>\n<p>여차저차해서 이유를 알게 됬는데, build 시에 젠킨스의 할당된 메모리가 부족한 메모리 이슈임을 알게됬습니다.</p>\n<p>일단 엄청나게 많은 메모리가 필요할거라고 생각하진 않고, 팀원분의 도움을 받아 젠킨스 스왑메모리를 설정했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 젠킨스가 있는 ec2에서 스왑파일을 잡아줍니다.\nsudo dd if=/dev/zero of=/swapfile bs=128M count=32\n\n2. 스왑파일에 권한을 바꿔줍니다.\nsudo chmod 600 /swapfile\n\n3. 스왑파일 영역을 설정해줍니다.\nsudo mkswap /swapfile\n\n4. 스왑공간에 파일을 추가합니다.\nsudo swapon /swapfile\n\n5. 편집기를 열어 아래파일을 열어줍니다.\nsudo vi /etc/fstab\n\n6. 아래 명령어를 끝에 추가해줍니다.\n/swapfile swap swap defaults 0 0\n\n7. 이후 젠킨스 config파일을 열어줍니다.\nvi /etc/default/jenkins\n\n8. JVM 용량을 알아서 적어줍니다.\n# Allow graphs etc. to work even when an X server is present\nJAVA_ARGS = \"-Django.awt.headless = true\"\nJAVA_ARGS = \"-Xm1024m\" &lt;--해당 명령어를 적어줍니다\n\n9. 이후 젠킨스를 리스타트해줍니다.\n\nbuild success!!</code></pre></div>\n<h2 id=\"3-다시-뻗어버린-젠킨스-왜\" style=\"position:relative;\"><a href=\"#3-%EB%8B%A4%EC%8B%9C-%EB%BB%97%EC%96%B4%EB%B2%84%EB%A6%B0-%EC%A0%A0%ED%82%A8%EC%8A%A4-%EC%99%9C\" aria-label=\"3 다시 뻗어버린 젠킨스 왜 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 다시 뻗어버린 젠킨스 왜..</h2>\n<p>CI/CD를 젠킨스로 변경한 이후 잘만 배포하다가 갑자기 build가 30분이상 진행되면서 또다시 젠킨스가 뻗어버립니다.</p>\n<p>젠킨스를 재시작하고 콘솔 아웃풋을 확인했지만 별다른 에러로그가 남지 않았으며, 어느시간부터 어떤과정이 메모리를 크게 잡아먹었는지도 알수가 없었습니다.</p>\n<p>다만 에러를 확인하려 리트라이를 눌렀을때 다른 배포가 없었음에도 정상적으로 build가 완료되었습니다. 이에 앞으로의 사후처리를 위해 로그를 좀더 꼼꼼하게 남기도록 변경했습니다.</p>\n<p>우선적으로 빌드시 메모리를 많이 사용해 다시 뻗는일이 없게하기 위해 타임아웃을 설정하고, 해당 과정에서 어느시간대에 무슨일이 일어났는지 확인하기 위해 타임스태프 옵션도 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    // 전역 options\n    options {\n        timestamps()\n        timeout(time: 180, unit: \"SECONDS\")\n    }</code></pre></div>\n<p>그리고 react build시에 어떤과정에서 얼만큼의 시간이 소요되는지 확인을 위해 speed-measure-webpack-plugin 을 사용하려 합니다.</p>\n<p>다만 저희 회사에 프로젝트는 CRA기반이며 eject는 고려대상이 아니었습니다. 그래서 webpack 오버라이딩을 위해 react-app-rewired 와 customize-cra를 사용했습니다.</p>\n<p>우선 2가지 라이브러리를 설치해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add react-app-rewired\nyarn add customize-cra -D</code></pre></div>\n<p>이후 package.json에서 스크립트를 변경해줍니다. 제 경우는 start와 build만 변경해주었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\"scripts\": {\n    \"start\": \"react-app-rewired start\",\n    \"build\": \"react-app-rewired build\"\n}</code></pre></div>\n<p>그리고 최상위 루트에서 config-overrides.js 파일을 생성하고 다음과 같이 작성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> SpeedMeasurePlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'speed-measure-webpack-plugin'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> smp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SpeedMeasurePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config<span class=\"token punctuation\">,</span> env</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  config <span class=\"token operator\">=</span> smp<span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>config<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> config\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>그런데 해당 에러가 발생합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Error: You forgot to add 'mini-css-extract-plugin' plugin\n(i.e. `{ plugins: [new MiniCssExtractPlugin()] }`),\nplease read https://github.com/webpack-contrib/mini-css-extract-plugin#getting-started</code></pre></div>\n<p>mini-css-extract-plugin을 install하고 플러그인 안에 넣었음에도, 자꾸 해당에러가 발생합니다. 검색을 해보니 mini-css-extract-plugin을 직접 빼서 넣어주면 된다고 합니다. 코드를 다음과 같이 수정합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> SpeedMeasurePlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'speed-measure-webpack-plugin'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> MiniCssExtractPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mini-css-extract-plugin'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">config</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// config 플러그인 배열에서 MiniCssExtractPlugin 인스턴스가 있다면 반환합니다.</span>\n  <span class=\"token keyword\">const</span> miniCssExtractPluginOrigin <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\">plugin</span> <span class=\"token operator\">=></span> plugin <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">MiniCssExtractPlugin</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// MiniCssExtractPlugin를 제외한 나머지 배열을 반환합니다.</span>\n  config<span class=\"token punctuation\">.</span>plugins <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\">plugin</span> <span class=\"token operator\">=></span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>plugin <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">MiniCssExtractPlugin</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// smp 옵션을 설정합니다.</span>\n  <span class=\"token keyword\">const</span> smp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SpeedMeasurePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">outputFormat</span><span class=\"token operator\">:</span> <span class=\"token string\">'humanVerbose'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">loaderTopFiles</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// smp 안에 config 값을 넣습니다.</span>\n  <span class=\"token keyword\">const</span> newConfig <span class=\"token operator\">=</span> smp<span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>config<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  newConfig<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>miniCssExtractPluginOrigin<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> newConfig\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이후 build를 해보니 최적화 과정에 대한 log가 기록되는것을 확인했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> SMP  ⏱\nGeneral output time took 12,179 ms\n\n SMP  ⏱  Plugins\nTerserPlugin took 6,677 ms\nESLintWebpackPlugin took 555 ms\nCssMinimizerPlugin took 418 ms\n...</code></pre></div>\n<p>그런데 build 실행은 잘 되더니 갑자기 start 스크립트를 실행하면 또 처음보는 에러가 발생합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Invalid configuration object. Webpack has been initialized using a configuration object that does not match the API schema.\n - configuration.plugins[11] should be one of these:\n   object { apply, … } | function\n   -> Plugin of type object or instanceof Function.\n   Details:\n    * configuration.plugins[11] should be an object:\n      object { apply, … }\n      -> Plugin instance.\n    * configuration.plugins[11] should be an instance of function.\n      -> Function acting as plugin.</code></pre></div>\n<p>대충 웹팩 플러그인의 잘못된 값이 들어갈 경우 발생할 수 있는 에러라고 합니다.</p>\n<p>일단 build는 잘됬으니 해당과정에서 config 값을 conslog.log로 찍어보며 추적을 해본결과, build의 경우 MiniCssExtractPlugin가 플러그인에 존재했습니다.</p>\n<p>하지만 start에 경우 없어 miniCssExtractPluginOrigin의 값이 undefind인채로 플러그인 배열안에 들어가 에러를 발생시켰습니다.</p>\n<p>마지막 줄만 코드를 다음과 같이 변경해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// miniCssExtractPluginOrigin -> undefind일 경우 병합 연산자로 처리</span>\nnewConfig<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>miniCssExtractPluginOrigin <span class=\"token operator\">??</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MiniCssExtractPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<br>\n<br>\n<hr>\n참고\n<p><a href=\"https://devroach.tistory.com/32\">https://devroach.tistory.com/32</a></p>","frontmatter":{"title":"FE CI/CD Jenkins 적용기","date":"February 09, 2023"}}},"pageContext":{"slug":"/Error/젠킨스 에러로그 개선기/","previous":{"fields":{"slug":"/Python/23.01.19 pynecone/"},"frontmatter":{"title":"Pynecone 체험기"}},"next":{"fields":{"slug":"/React/리액트 쿼리(1)/"},"frontmatter":{"title":"React Query"}}}},"staticQueryHashes":["2486386679","3128451518"]}