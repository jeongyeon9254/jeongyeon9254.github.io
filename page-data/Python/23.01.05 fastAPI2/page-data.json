{"componentChunkName":"component---src-templates-blog-post-js","path":"/Python/23.01.05 fastAPI2/","result":{"data":{"site":{"siteMetadata":{"title":"Jeong.io","author":"JeongYeonJae","siteUrl":"https://jeongyeon9254.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"c2ebfa32-c3a6-5daf-9ffa-48c9fbec157c","excerpt":"fastAPI vs django 지난번에 fastAPI에 대해 간단하게 알아보았습니다. 그렇다면 이번에는 장고와 함께 간단하게 비교해보며, fastAPI에 장점을 알아보려합니다. 테스트 환경은 로컬테스트이며, 간단하게 db에 연동된 퀴즈정보를 받아오는것으로 하겠습니다. ex_screenshot 테스트에는 jmeter를 사용했습니다. 테스트 시나리오는 다음과 같습니다. ex_screenshot 500명이 10초동안 10번의 리퀘스트를 날리는것으로 간단하게 테스트해보겠습니다. 1. django get…","html":"<h2 id=\"fastapi-vs-django\" style=\"position:relative;\"><a href=\"#fastapi-vs-django\" aria-label=\"fastapi vs django permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fastAPI vs django</h2>\n<p>지난번에 fastAPI에 대해 간단하게 알아보았습니다.<br>\n그렇다면 이번에는 장고와 함께 간단하게 비교해보며, fastAPI에 장점을 알아보려합니다.<br>\n테스트 환경은 로컬테스트이며, 간단하게 db에 연동된 퀴즈정보를 받아오는것으로 하겠습니다.</p>\n<p><img src=\"/content/python/fast_4.png\" alt=\"ex_screenshot\"></p>\n<p>테스트에는 jmeter를 사용했습니다.<br>\n테스트 시나리오는 다음과 같습니다.</p>\n<p><img src=\"/content/python/fast_5.png\" alt=\"ex_screenshot\"></p>\n<p>500명이 10초동안 10번의 리퀘스트를 날리는것으로 간단하게 테스트해보겠습니다.</p>\n<h2 id=\"1-django-get-api\" style=\"position:relative;\"><a href=\"#1-django-get-api\" aria-label=\"1 django get api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. django get API</h2>\n<p><img src=\"/content/python/fast_6.png\" alt=\"ex_screenshot\"></p>\n<p>총 4회 테스트를 진행한 결과입니다.</p>\n<p>총 요청회수 : 20001회 / 평균 응답시간 : 23ms<br>\n최소응답시간 : 3ms / 최대응답시간 : 169ms<br>\n표준편차 : 20.85 / 에러율 : 0%<br>\n초당 처리건수 : 15.7건 / 초당 처리량KB : 2.35kb</p>\n<h2 id=\"2-fastapi-get-api\" style=\"position:relative;\"><a href=\"#2-fastapi-get-api\" aria-label=\"2 fastapi get api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. fastAPI get API</h2>\n<p><img src=\"/content/python/fast_7.png\" alt=\"ex_screenshot\"></p>\n<p>총 4회 테스트를 진행한 결과입니다.</p>\n<p>총 요청회수 : 20000회 / 평균 응답시간 : 1ms<br>\n최소응답시간 : 0ms / 최대응답시간 : 56ms<br>\n표준편차 : 2.36 / 에러율 : 0%<br>\n초당 처리건수 : 262건 / 초당 처리량KB : 37kb</p>\n<h2 id=\"3-결과\" style=\"position:relative;\"><a href=\"#3-%EA%B2%B0%EA%B3%BC\" aria-label=\"3 결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 결과</h2>\n<p>결과는 생각보다는 차이가 꽤 났습니다.</p>\n<p>로컬에 정말 간단한 get api 테스트였음에도 불구하고 상당히 큰 차이를 보여주며, fastAPI가 더 높은 성능을 보여주었습니다.</p>\n<p>물론 해당 테스트에 대한 정확도는 확신할수 없고, 단순히 한 테이블의 정보를 받아오는 간단한 api였기 때문에 실제 서버의 성능과 db설계에 따라 다른 결과를 보여줄수도 있습니다.</p>\n<p>하지만 ‘node.js보다 빠르고 go와 필적하는 속도를 가진 프레임워크’ 라는 fastAPI소개에 걸맞는 성능을 보여준거 같습니다.</p>\n<h2 id=\"4-why\" style=\"position:relative;\"><a href=\"#4-why\" aria-label=\"4 why permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. why?</h2>\n<p>그러면 이제 왜 이렇게 차이가 나는지에 대해 알아보겠습니다.</p>\n<p>fastAPI의 중요한점은 Uvicorn을 사용한다는 점이었습니다.</p>\n<p><img src=\"/content/python/fast_8.png\" alt=\"ex_screenshot\"></p>\n<p>그리고 Uvicorn은 uvloop 및 사용하는 ASGI web server이기 때문에 성능이 빠르다고 했습니다.</p>\n<p><img src=\"/content/python/fast_9.png\" alt=\"ex_screenshot\"></p>\n<p>해당 개념에 대한 정리글:<br>\n<a href=\"https://it-eldorado.tistory.com/159?category=749661\">https://it-eldorado.tistory.com/159?category=749661</a></p>\n<h2 id=\"5-비교에-대한-개인적인-느낌\" style=\"position:relative;\"><a href=\"#5-%EB%B9%84%EA%B5%90%EC%97%90-%EB%8C%80%ED%95%9C-%EA%B0%9C%EC%9D%B8%EC%A0%81%EC%9D%B8-%EB%8A%90%EB%82%8C\" aria-label=\"5 비교에 대한 개인적인 느낌 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 비교에 대한 개인적인 느낌</h2>\n<p>django와 fastAPI를 짧게 배워보고, 사용해보며 FE관점에서 느낀점은 장고는 앵귤러, fastAPI는 리액트와 비슷하다는 느낌이 들었습니다.</p>\n<p>omr도 제대로 사용도 안해보고 완벽한 비교는 아니겠지만, 장고의 경우 풀스택 프레임워크이며 결이 완전한 웹서비스 완성에 포커스가 있다고 느껴지는 반면, fastAPI는 보다 쉽고 빠르게 api서버구축에만 포커스를 두었으며 그 과정이 django 보다는 조금 더 자유롭다고 느껴졌습니다.</p>","frontmatter":{"title":"fastApi (2)","date":"January 05, 2023"}}},"pageContext":{"slug":"/Python/23.01.05 fastAPI2/","previous":{"fields":{"slug":"/Python/22.12.22 fastAPI/"},"frontmatter":{"title":"fastApi (1)"}},"next":{"fields":{"slug":"/LIFE/23.01.10 늦은 회고/"},"frontmatter":{"title":"조금 늦어버린 2022년 회고"}}}},"staticQueryHashes":["2486386679","3128451518"]}