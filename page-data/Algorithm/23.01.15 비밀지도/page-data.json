{"componentChunkName":"component---src-templates-blog-post-js","path":"/Algorithm/23.01.15 비밀지도/","result":{"data":{"site":{"siteMetadata":{"title":"Jeong.io","author":"JeongYeonJae","siteUrl":"https://jeongyeon9254.github.io","comment":{"disqusShortName":"","utterances":"JaeYeopHan/gatsby-starter-bee"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"e5dcf7c5-7be0-51c1-be96-c6f4fc6f45fb","excerpt":"2018 KAKAO BLIND RECRUITMENT 1차 비밀지도 링크 : https://school.programmers.co.kr/learn/courses/30/lessons/17681 어떻게 풀어야하는지는 머리속에서 바로 떠올랐지만, 다소 무식하게 푼 느낌이 있습니다. 여전히 다른사람들의 풀이를 보면 신가할 따름입니다. 그래도 이정도면 하루10분 말랑말랑하게 풀만 할 것 같습니다.","html":"<h2 id=\"2018-kakao-blind-recruitment-1차-비밀지도\" style=\"position:relative;\"><a href=\"#2018-kakao-blind-recruitment-1%EC%B0%A8-%EB%B9%84%EB%B0%80%EC%A7%80%EB%8F%84\" aria-label=\"2018 kakao blind recruitment 1차 비밀지도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2018 KAKAO BLIND RECRUITMENT 1차 비밀지도</h2>\n<p>링크 : <a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/17681\">https://school.programmers.co.kr/learn/courses/30/lessons/17681</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> arr1<span class=\"token punctuation\">,</span> arr2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 숫자를 2진수로 바꾸고 만약 x의 length가 n보다 작다면 n만큼 0을 붙여줍니다</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">changedArr</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 받은 배열을 map</span>\n    <span class=\"token keyword\">const</span> newArr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 1. 2진수로 바꿉니다</span>\n      x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token comment\">// 만약 숫자가 작다면 n의 길이로 만들어줍니다</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> addZero <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> x<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>\n        x <span class=\"token operator\">=</span> addZero <span class=\"token operator\">+</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> x\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> newArr\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> newArr1 <span class=\"token operator\">=</span> <span class=\"token function\">changedArr</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> newArr2 <span class=\"token operator\">=</span> <span class=\"token function\">changedArr</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 배열을 겹쳐 지도를 만듭니다</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">overlapArr</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arr1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> map <span class=\"token operator\">=</span> arr1<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> xIdx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> mapLine <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">y<span class=\"token punctuation\">,</span> yIdx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">[</span>xIdx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>yIdx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>arr2<span class=\"token punctuation\">[</span>xIdx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>yIdx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token string\">' '</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token string\">'#'</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> mapLine<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> map\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">overlapArr</span><span class=\"token punctuation\">(</span>newArr1<span class=\"token punctuation\">,</span> newArr2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>어떻게 풀어야하는지는 머리속에서 바로 떠올랐지만, 다소 무식하게 푼 느낌이 있습니다.</p>\n<p>여전히 다른사람들의 풀이를 보면 신가할 따름입니다.</p>\n<p>그래도 이정도면 하루10분 말랑말랑하게 풀만 할 것 같습니다.</p>","frontmatter":{"title":"[algorithm] 1차 비밀지도","date":"January 15, 2023"}}},"pageContext":{"slug":"/Algorithm/23.01.15 비밀지도/","previous":{"fields":{"slug":"/Algorithm/23.01.15 옹알이/"},"frontmatter":{"title":"[algorithm] 옹알이"}},"next":{"fields":{"slug":"/Python/23.01.19 pynecone/"},"frontmatter":{"title":"Pynecone 체험기"}}}},"staticQueryHashes":["2486386679","3128451518"]}